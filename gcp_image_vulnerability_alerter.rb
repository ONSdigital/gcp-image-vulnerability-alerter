#!/usr/bin/env ruby
# frozen_string_literal: true

require 'time'
require 'google/cloud/container_analysis'

# Class blah blah
class GCPContainerAnalysis
  DATE_TIME_FORMAT = '%A %e %b %Y %H:%M:%S UTC'
  SEVERITIES = %i[HIGH CRITICAL].freeze

  def initialize
    raise 'Missing CONTAINER_ANALYSIS_CREDENTIALS environment variable' unless ENV['CONTAINER_ANALYSIS_CREDENTIALS']
    raise 'Missing CONTAINER_ANALYSIS_PROJECT environment variable' unless ENV['CONTAINER_ANALYSIS_PROJECT']

    @client = Google::Cloud::ContainerAnalysis.new
  end

  def run
    todays_vulnerability_occurrences.each do |occurrence|
      effective_severity = occurrence.vulnerability.effective_severity
      next unless SEVERITIES.include?(effective_severity)

      resource_uri = occurrence.resource_uri
      short_description = occurrence.vulnerability.short_description
      puts resource_uri
      occurrence.vulnerability.package_issue.each do |issue|
        puts "#{effective_severity}: #{short_description} - #{issue.affected_package} - #{occurrence.create_time.to_json}"
      end
      occurrence.vulnerability.related_urls.each do |related_url|
        puts "#{related_url.label}: #{related_url.url}\n\n"
      end
    end
  end

  private

  # See https://stackoverflow.com/a/42001209
  def occurrence_time_to_time(occurrence)
    epoch_ms = occurrence.create_time.nanos / 10**6
    Time.at(occurrence.create_time.seconds, epoch_ms)
  end

  def today?(day)
    day >= Time.now.day
  end

  def todays_vulnerability_occurrences
    grafeas_client = @client.grafeas_client
    parent = Grafeas::V1::GrafeasClient.project_path(ENV['CONTAINER_ANALYSIS_PROJECT'])
    occurrences = []
    grafeas_client.list_occurrences(parent).each do |occurrence|
      occurrence_time = occurrence_time_to_time(occurrence)
      occurrences << occurrence if today?(occurrence_time.day) && occurrence.kind == :VULNERABILITY
    end
    occurrences
  end
end

GCPContainerAnalysis.new.run
